diff --git a/composer.json b/composer.json
index c64a841..25b8052 100755
--- a/composer.json
+++ b/composer.json
@@ -9,6 +9,13 @@
     "homepage": "http://framework.zend.com/",
     "require": {
         "php": ">=5.3.3",
-        "zendframework/zendframework": "2.3.*"
+        "zendframework/zendframework": "2.3.*",
+        "snapshotpl/zf-snap-jquery": "dev-master",
+        "zendframework/zftool": "dev-master",
+        "bjyoungblood/bjy-authorize" : "1.4.*",
+        "zf-commons/zfc-user":"1.2.*",
+        "zf-commons/zfc-admin": " 0.2.1",
+        "danielss89/zfc-user-admin" : "dev-master"
+
     }
 }
diff --git a/config/application.config.php b/config/application.config.php
index 1d8c120..650af19 100755
--- a/config/application.config.php
+++ b/config/application.config.php
@@ -1,68 +1,30 @@
 <?php
+/**
+ * Configuration file generated by ZFTool
+ * The previous configuration file is stored in application.config.old
+ *
+ * @see https://github.com/zendframework/ZFTool
+ */
 return array(
-    // This should be an array of module namespaces used in the application.
     'modules' => array(
         'Application',
         'Cliente',
         'Proveedor',
         'Reserva',
-       // 'Usuario',
+        'ZfcBase',
+        'ZfcUser',
+        'ZfcAdmin',
+        'BjyAuthorize',
+        'ZfcUserAdmin',
+        'BjyAuthorizeAdmin'
     ),
-
-    // These are various options for the listeners attached to the ModuleManager
     'module_listener_options' => array(
-        // This should be an array of paths in which modules reside.
-        // If a string key is provided, the listener will consider that a module
-        // namespace, the value of that key the specific path to that module's
-        // Module class.
         'module_paths' => array(
             './module',
-            './vendor',
+            './vendor'
         ),
-
-        // An array of paths from which to glob configuration files after
-        // modules are loaded. These effectively override configuration
-        // provided by modules themselves. Paths may use GLOB_BRACE notation.
         'config_glob_paths' => array(
-            'config/autoload/{,*.}{global,local}.php',
-        ),
-
-        // Whether or not to enable a configuration cache.
-        // If enabled, the merged configuration will be cached and used in
-        // subsequent requests.
-        //'config_cache_enabled' => $booleanValue,
-
-        // The key used to create the configuration cache file name.
-        //'config_cache_key' => $stringKey,
-
-        // Whether or not to enable a module class map cache.
-        // If enabled, creates a module class map cache which will be used
-        // by in future requests, to reduce the autoloading process.
-        //'module_map_cache_enabled' => $booleanValue,
-
-        // The key used to create the class map cache file name.
-        //'module_map_cache_key' => $stringKey,
-
-        // The path in which to cache merged configuration.
-        //'cache_dir' => $stringPath,
-
-        // Whether or not to enable modules dependency checking.
-        // Enabled by default, prevents usage of modules that depend on other modules
-        // that weren't loaded.
-        // 'check_dependencies' => true,
-    ),
-
-    // Used to create an own service manager. May contain one or more child arrays.
-    //'service_listener_options' => array(
-    //     array(
-    //         'service_manager' => $stringServiceManagerName,
-    //         'config_key'      => $stringConfigKey,
-    //         'interface'       => $stringOptionalInterface,
-    //         'method'          => $stringRequiredMethodName,
-    //     ),
-    // )
-
-   // Initial configuration with which to seed the ServiceManager.
-   // Should be compatible with Zend\ServiceManager\Config.
-   // 'service_manager' => array(),
+            'config/autoload/{,*.}{global,local}.php'
+        )
+    )
 );
diff --git a/config/autoload/ZfcUserAdmin.global.php b/config/autoload/ZfcUserAdmin.global.php
new file mode 100644
index 0000000..25fb0f6
--- /dev/null
+++ b/config/autoload/ZfcUserAdmin.global.php
@@ -0,0 +1,31 @@
+<?php
+/**
+ * ZfcUserAdmin Configuration
+ *
+ * If you have a ./config/autoload/ directory set up for your project, you can
+ * drop this config file in it and change the values as you wish.
+ */
+$settings = array(
+    
+
+    /**
+     * Mapper for ZfcUser
+     *
+     * Set the mapper to be used here
+     * Currently Available mappers
+     * 
+     * ZfcUserAdmin\Mapper\UserDoctrine
+     *
+     * By default this is using
+     * ZfcUserAdmin\Mapper\UserZendDb
+     */
+    'user_mapper' => 'ZfcUserAdmin\Mapper\UserZendDb',
+    'create_user_auto_password' => false
+);
+
+/**
+ * You do not need to edit below this line
+ */
+return array(
+    'zfcuseradmin' => $settings
+);
diff --git a/config/autoload/bjyauthorize.global.php b/config/autoload/bjyauthorize.global.php
new file mode 100644
index 0000000..3ddb26a
--- /dev/null
+++ b/config/autoload/bjyauthorize.global.php
@@ -0,0 +1,104 @@
+<?php
+
+// For PHP <= 5.4, you should replace any ::class references with strings
+// remove the first \ and the ::class part and encase in single quotes
+
+return [
+    'bjyauthorize' => [
+
+        // set the 'guest' role as default (must be defined in a role provider)
+        'default_role' => 'guest',
+
+        /* this module uses a meta-role that inherits from any roles that should
+         * be applied to the active user. the identity provider tells us which
+         * roles the "identity role" should inherit from.
+         * for ZfcUser, this will be your default identity provider
+        */
+        'identity_provider' => \BjyAuthorize\Provider\Identity\ZfcUserZendDb::class,
+
+        /* If you only have a default role and an authenticated role, you can
+         * use the 'AuthenticationIdentityProvider' to allow/restrict access
+         * with the guards based on the state 'logged in' and 'not logged in'.
+         *
+         * 'default_role'       => 'guest',         // not authenticated
+         * 'authenticated_role' => 'user',          // authenticated
+         * 'identity_provider'  => \BjyAuthorize\Provider\Identity\AuthenticationIdentityProvider::class,
+         */
+
+        /* role providers simply provide a list of roles that should be inserted
+         * into the Zend\Acl instance. the module comes with two providers, one
+         * to specify roles in a config file and one to load roles using a
+         * Zend\Db adapter.
+         */
+        'role_providers' => [
+
+            // this will load roles from the user_role table in a database
+            // format: user_role(role_id(varchar], parent(varchar))
+            \BjyAuthorize\Provider\Role\ZendDb::class => [
+                'table'                 => 'user_role',
+                'identifier_field_name' => 'id',
+                'role_id_field'         => 'role_id',
+                'parent_role_field'     => 'parent_id',
+            ],
+        ],
+
+        /* Currently, only controller and route guards exist
+         *
+         * Consider enabling either the controller or the route guard depending on your needs.
+         */
+        'guards' => [
+            /* If this guard is specified here (i.e. it is enabled], it will block
+             * access to all controllers and actions unless they are specified here.
+             * You may omit the 'action' index to allow access to the entire controller
+             */
+            \BjyAuthorize\Guard\Controller::class => [
+                // Below is the default index action used by the ZendSkeletonApplication
+                [
+                    'controller' => 'Application\Controller\Index',
+                    'roles' => ['guest', 'user', 'admin']
+                ],
+                [
+                    'controller' => [
+                        'Cliente\Controller\Cliente',
+                        'Proveedor\Controller\Proveedor',
+                        'Reserva\Controller\Reserva'
+                    ],
+                    'action' => ['list','index'],
+                    'roles' => ['guest'],
+                ],
+                [
+                    'controller' => [
+                        'Cliente\Controller\Cliente',
+                        'Proveedor\Controller\Proveedor',
+                        'Reserva\Controller\Reserva'
+                    ],
+                    'action' => [
+                        'list','index','add', 'edit', 'delete',
+                        'indexhabitacion', 'indexpabellon', 'indextarifa',
+                        'addhabitacion', 'addpabellon', 'addtarifa',
+                        'edithabitacion', 'editpabellon', 'edittarifa',
+                        'book','gridreserva'
+                    ],
+                    'roles' => ['user'],
+                ],
+                [
+                    'controller' => 'zfcuser',
+                    'action' => ['login','register', 'authenticate'],
+                    'roles' => ['guest']
+                ],
+                [
+                    'controller' => 'zfcuser',
+                    'action' => ['index', 'logout', 'changepassword', 'changeemail'],
+                    'roles' => ['user']
+                ],
+                [
+                    'controller' => [
+                        'ZfcAdmin\Controller\AdminController',
+                        'zfcuseradmin'
+                    ],
+                    'roles' => ['admin']
+                ]
+            ],
+        ],
+    ],
+];
\ No newline at end of file
diff --git a/config/autoload/zfcuser.global.php b/config/autoload/zfcuser.global.php
new file mode 100644
index 0000000..d78005d
--- /dev/null
+++ b/config/autoload/zfcuser.global.php
@@ -0,0 +1,240 @@
+<?php
+/**
+ * ZfcUser Configuration
+ *
+ * If you have a ./config/autoload/ directory set up for your project, you can
+ * drop this config file in it and change the values as you wish.
+ */
+$settings = array(
+    /**
+     * Zend\Db\Adapter\Adapter DI Alias
+     *
+     * Please specify the DI alias for the configured Zend\Db\Adapter\Adapter
+     * instance that ZfcUser should use.
+     */
+    //'zend_db_adapter' => 'Zend\Db\Adapter\Adapter',
+
+    /**
+     * User Model Entity Class
+     *
+     * Name of Entity class to use. Useful for using your own entity class
+     * instead of the default one provided. Default is ZfcUser\Entity\User.
+     * The entity class should implement ZfcUser\Entity\UserInterface
+     */
+    //'user_entity_class' => 'ZfcUser\Entity\User',
+
+    /**
+     * Enable registration
+     *
+     * Allows users to register through the website.
+     *
+     * Accepted values: boolean true or false
+     */
+    'enable_registration' => false,
+
+    /**
+     * Enable Username
+     *
+     * Enables username field on the registration form, and allows users to log
+     * in using their username OR email address. Default is false.
+     *
+     * Accepted values: boolean true or false
+     */
+    'enable_username' => false,
+
+    /**
+     * Authentication Adapters
+     *
+     * Specify the adapters that will be used to try and authenticate the user
+     *
+     * Default value: array containing 'ZfcUser\Authentication\Adapter\Db' with priority 100
+     * Accepted values: array containing services that implement 'ZfcUser\Authentication\Adapter\ChainableAdapter'
+     */
+    'auth_adapters' => array( 100 => 'ZfcUser\Authentication\Adapter\Db' ),
+
+    /**
+     * Enable Display Name
+     *
+     * Enables a display name field on the registration form, which is persisted
+     * in the database. Default value is false.
+     *
+     * Accepted values: boolean true or false
+     */
+    'enable_display_name' => true,
+
+    /**
+     * Modes for authentication identity match
+     *
+     * Specify the allowable identity modes, in the order they should be
+     * checked by the Authentication plugin.
+     *
+     * Default value: array containing 'email'
+     * Accepted values: array containing one or more of: email, username
+     */
+    //'auth_identity_fields' => array( 'email' ),
+
+    /**
+     * Login form timeout
+     *
+     * Specify the timeout for the CSRF security field of the login form
+     * in seconds. Default value is 300 seconds.
+     *
+     * Accepted values: positive int value
+     */
+    //'login_form_timeout' => 300,
+
+    /**
+     * Registration form timeout
+     *
+     * Specify the timeout for the CSRF security field of the registration form
+     * in seconds. Default value is 300 seconds.
+     *
+     * Accepted values: positive int value
+     */
+    //'user_form_timeout' => 300,
+
+    /**
+     * Login After Registration
+     *
+     * Automatically logs the user in after they successfully register. Default
+     * value is false.
+     *
+     * Accepted values: boolean true or false
+     */
+    //'login_after_registration' => true,
+
+    /**
+     * Registration Form Captcha
+     *
+     * Determines if a captcha should be utilized on the user registration form.
+     * Default value is false.
+     */
+    //'use_registration_form_captcha' => false,
+
+    /**
+     * Form Captcha Options
+     *
+     * Currently used for the registration form, but re-usable anywhere. Use
+     * this to configure which Zend\Captcha adapter to use, and the options to
+     * pass to it. The default uses the Figlet captcha.
+     */
+    /*'form_captcha_options' => array(
+        'class'   => 'figlet',
+        'options' => array(
+            'wordLen'    => 5,
+            'expiration' => 300,
+            'timeout'    => 300,
+        ),
+    ),*/
+
+    /**
+     * Use Redirect Parameter If Present
+     *
+     * Upon successful authentication, check for a 'redirect' POST or GET parameter
+     *
+     * Accepted values: boolean true or false
+     */
+    //'use_redirect_parameter_if_present' => true,
+
+    /**
+     * Sets the view template for the user login widget
+     *
+     * Default value: 'zfc-user/user/login.phtml'
+     * Accepted values: string path to a view script
+     */
+    //'user_login_widget_view_template' => 'zfc-user/user/login.phtml',
+
+    /**
+     * Login Redirect Route
+     *
+     * Upon successful login the user will be redirected to the entered route
+     *
+     * Default value: 'zfcuser'
+     * Accepted values: A valid route name within your application
+     *
+     */
+    //'login_redirect_route' => 'zfcuser',
+
+    /**
+     * Logout Redirect Route
+     *
+     * Upon logging out the user will be redirected to the enterd route
+     *
+     * Default value: 'zfcuser/login'
+     * Accepted values: A valid route name within your application
+     */
+    //'logout_redirect_route' => 'zfcuser/login',
+
+    /**
+     * Password Security
+     *
+     * DO NOT CHANGE THE PASSWORD HASH SETTINGS FROM THEIR DEFAULTS
+     * Unless A) you have done sufficient research and fully understand exactly
+     * what you are changing, AND B) you have a very specific reason to deviate
+     * from the default settings and know what you're doing.
+     *
+     * The password hash settings may be changed at any time without
+     * invalidating existing user accounts. Existing user passwords will be
+     * re-hashed automatically on their next successful login.
+     */
+
+    /**
+     * Password Cost
+     *
+     * The number represents the base-2 logarithm of the iteration count used for
+     * hashing. Default is 14 (about 10 hashes per second on an i5).
+     *
+     * Accepted values: integer between 4 and 31
+     */
+    //'password_cost' => 14,
+
+    /**
+     * Enable user state usage
+     *
+     * Should user's state be used in the registration/login process?
+     */
+    //'enable_user_state' => true,
+
+    /**
+     * Default user state upon registration
+     *
+     * What state user should have upon registration?
+     * Allowed value type: integer
+     */
+    //'default_user_state' => 1,
+
+    /**
+     * States which are allowing user to login
+     *
+     * When user tries to login, is his/her state one of the following?
+     * Include null if you want user's with no state to login as well.
+     * Allowed value types: null and integer
+     */
+    //'allowed_login_states' => array( null, 1 ),
+
+    /**
+     * User table name
+     */
+    //'table_name' => 'user',
+
+    /**
+     * End of ZfcUser configuration
+     */
+);
+
+/**
+ * You do not need to edit below this line
+ */
+return array(
+    'zfcuser' => $settings,
+    'service_manager' => array(
+        'aliases' => array(
+            'zfcuser_zend_db_adapter' => (isset($settings['zend_db_adapter'])) ? $settings['zend_db_adapter']: 'Zend\Db\Adapter\Adapter',
+        ),
+        'factories' => array(
+            'zfcuser_user_hydrator' => function($sm) {
+                return new ZfcUser\Mapper\UserHydrator();
+            }
+        )
+    ),
+);
diff --git a/config/autoload/zfcuser.navigation.global.php b/config/autoload/zfcuser.navigation.global.php
new file mode 100644
index 0000000..f7233a9
--- /dev/null
+++ b/config/autoload/zfcuser.navigation.global.php
@@ -0,0 +1,42 @@
+<?php
+
+return array(
+    'navigation' => array(
+        // The DefaultNavigationFactory we configured in (1) uses 'default' as the sitemap key
+        'default' => array(
+            // And finally, here is where we define our page hierarchy
+            array(
+                'label' => 'User Profile',
+                'route' => 'zfcuser',
+                'resource' => 'userProfile',
+                'privilege' => 'view',
+                'pages' => array(
+                    'profile' => array(
+                        'label' => 'Profile',
+                        'route' => 'zfcuser',
+                        'resource' => 'userProfile',
+                        'privilege' => 'view',
+                    ),
+                    'login' => array(
+                        'label' => 'Sign In',
+                        'route' => 'zfcuser/login',
+                        'resource' => 'userProfile',
+                        'privilege' => 'login',
+                    ),
+                    'logout' => array(
+                        'label' => 'Sign Out',
+                        'route' => 'zfcuser/logout',
+                        'resource' => 'userProfile',
+                        'privilege' => 'logout',
+                    ),
+//                    'register' => array(
+//                        'label' => 'Register',
+//                        'route' => 'zfcuser/register',
+//                        'resource' => 'userProfile',
+//                        'privilege' => 'register',
+//                    ),
+                ),
+            ),
+        ),
+    ),
+);
\ No newline at end of file
diff --git a/module/Application/Module.php b/module/Application/Module.php
index 96763b9..964f9d8 100755
--- a/module/Application/Module.php
+++ b/module/Application/Module.php
@@ -9,16 +9,35 @@
 
 namespace Application;
 
-use Zend\Mvc\ModuleRouteListener;
 use Zend\Mvc\MvcEvent;
 
+use BjyAuthorize\View\RedirectionStrategy;
+use Zend\View\Helper\Navigation;
+
+
 class Module
 {
     public function onBootstrap(MvcEvent $e)
     {
-        $eventManager        = $e->getApplication()->getEventManager();
-        $moduleRouteListener = new ModuleRouteListener();
-        $moduleRouteListener->attach($eventManager);
+        $application  = $e->getTarget();
+        $eventManager = $application->getEventManager();
+
+        $strategy = new RedirectionStrategy();
+
+        //$eventManager->attach($strategy);
+
+        $sm = $application->getServiceManager();
+        // Add ACL information to the Navigation view helper
+        try {
+            $authorize = $sm->get('BjyAuthorize\Service\Authorize');
+            $acl = $authorize->getAcl();
+            $role = $authorize->getIdentityProvider()->getIdentityRoles()[0];
+            /* @var $nav \Zend\Navigation\Service\DefaultNavigationFactory */
+            Navigation::setDefaultAcl($acl);
+            Navigation::setDefaultRole($role);
+        } catch (\Exception $e) {
+
+        }
     }
 
     public function getConfig()
@@ -36,4 +55,27 @@ class Module
             ),
         );
     }
+
+    public function getServiceConfig()
+    {
+        return array(
+            'factories' => array(
+                'Navigation' => 'Zend\Navigation\Service\DefaultNavigationFactory',
+            ),
+        );
+    }
+
+    public function getViewHelperConfig()
+    {
+        return array(
+            'factories' => array(
+                'bootstrapNavigation' => function ($sm) {
+                    $viewHelper = new View\Helper\BootstrapNavigation();
+                    $viewHelper->setServiceLocator($sm->getServiceLocator());
+                    return $viewHelper;
+
+                }
+            )
+        );
+    }
 }
diff --git a/module/Application/config/module.config.php b/module/Application/config/module.config.php
index 317c0e7..4c17d17 100755
--- a/module/Application/config/module.config.php
+++ b/module/Application/config/module.config.php
@@ -7,7 +7,7 @@
  * @license   http://framework.zend.com/license/new-bsd New BSD License
  */
 
-return array(
+$setting = array(
     'router' => array(
         'routes' => array(
             'home' => array(
@@ -101,3 +101,5 @@ return array(
         ),
     ),
 );
+
+return $setting;
\ No newline at end of file
diff --git a/module/Application/config/navigation.config.php b/module/Application/config/navigation.config.php
new file mode 100644
index 0000000..c8c175a
--- /dev/null
+++ b/module/Application/config/navigation.config.php
@@ -0,0 +1,14 @@
+<?php
+
+return array(
+//    // All navigation-related configuration is collected in the 'navigation' key
+    'navigation' => array(
+//        // The DefaultNavigationFactory we configured in (1) uses 'default' as the sitemap key
+        'default' => array(
+            array(
+                'label' => 'Home',
+                'route' => 'home'
+            )
+        )
+    )
+);
\ No newline at end of file
diff --git a/module/Application/src/Application/Controller/IndexController.php b/module/Application/src/Application/Controller/IndexController.php
index 97d146c..36205fc 100755
--- a/module/Application/src/Application/Controller/IndexController.php
+++ b/module/Application/src/Application/Controller/IndexController.php
@@ -16,6 +16,10 @@ class IndexController extends AbstractActionController
 {
     public function indexAction()
     {
-        return new ViewModel();
+        $sm = $this->getServiceLocator();
+        $authorize = $sm->get('BjyAuthorize\Service\Authorize');
+        return new ViewModel(array(
+            'role' => $authorize->getIdentityProvider()->getIdentityRoles()
+        ));
     }
 }
diff --git a/module/Application/src/Application/View/Helper/BootstrapNavigation.php b/module/Application/src/Application/View/Helper/BootstrapNavigation.php
new file mode 100644
index 0000000..950da70
--- /dev/null
+++ b/module/Application/src/Application/View/Helper/BootstrapNavigation.php
@@ -0,0 +1,279 @@
+<?php
+
+namespace Application\View\Helper;
+
+use RecursiveIteratorIterator;
+use Zend\Navigation\AbstractContainer;
+use Zend\Navigation\Page\AbstractPage;
+use Zend\View\Helper\Navigation\Menu;
+
+class BootstrapNavigation extends Menu {
+    
+    protected $ulClass = 'nav navbar-nav';
+    /**
+     * CSS class to use for the ul element
+     *
+     * @var string
+     */
+    protected $nestedUlClass = 'dropdown-menu';
+
+    /**
+     * CSS class to use for the ul element
+     *
+     * @var string
+     */
+    protected $parentLiClass = 'dropdown';
+
+    /**
+     *
+     * @param string $ulClass
+     * @return \Zend\View\Helper\Navigation\Menu 
+     */
+    public function setNestedUlClass($ulClass) {
+        if (is_string($ulClass)) {
+            $this->nestedUlClass = $ulClass;
+        }
+        
+        return $this;
+    }
+
+    /**
+     * Returns CSS class to use for the nested 'ul' elements when rendering
+     *
+     * @return string  CSS class
+     */
+    public function getNestedUlClass()
+    {
+        return $this->nestedUlClass;
+    }
+    
+    /**
+     *
+     * @param type $liClass
+     * @return \Zend\View\Helper\Navigation\Menu 
+     */
+    public function setParentLiClass($liClass) {
+        if (is_string($liClass)) {
+            $this->parentLiClass = $liClass;
+        }
+        
+        return $this;
+    }
+
+    /**
+     * Returns CSS class to use for the first 'ul' element when rendering
+     *
+     * @return string  CSS class
+     */
+    public function getParentLiClass()
+    {
+        return $this->parentLiClass;
+    }
+
+    /**
+     * Returns an HTML string containing an 'a' element for the given page if
+     * the page's href is not empty, and a 'span' element if it is empty
+     *
+     * Overrides {@link AbstractHelper::htmlify()}.
+     *
+     * @param  AbstractPage $page page to generate HTML for
+     * @param bool $escapeLabel Whether or not to escape the label
+     * @param bool $addClassToListItem
+     * @return string               HTML string for the given page
+     */
+    public function htmlify(AbstractPage $page, $escapeLabel = true, $addClassToListItem = false)
+    {
+        // get label and title for translating
+        $label = $page->getLabel();
+        $title = $page->getTitle();
+
+        // translate label and title?
+        if (null !== ($translator = $this->getTranslator())) {
+            $textDomain = $this->getTranslatorTextDomain();
+            if (is_string($label) && !empty($label)) {
+                $label = $translator->translate($label, $textDomain);
+            }
+            if (is_string($title) && !empty($title)) {
+                $title = $translator->translate($title, $textDomain);
+            }
+        }
+
+        // get attribs for element
+        $attribs = array(
+            'id'     => $page->getId(),
+            'title'  => $title,
+            'class'  => $page->getClass()
+        );
+        
+        if($page->hasPages()) {
+            if(is_array($attribs['class'])) {
+                $attribs['class'][] = 'dropdown-toggle';
+            } else {
+                $attribs['class'] = array($attribs['class'],'dropdown-toggle');
+            }
+            $attribs['data-toggle'] = 'dropdown';
+        }
+
+        // does page have a href?
+        $href = $page->getHref();
+        if ($href) {
+            $element = 'a';
+            $attribs['href'] = $href;
+            $attribs['target'] = $page->getTarget();
+        } else {
+            $element = 'span';
+        }
+
+        $html = '<' . $element . $this->htmlAttribs($attribs) . '>';
+        if ($escapeLabel === true) {
+            $escaper = $this->view->plugin('escapeHtml');
+            $html .= $escaper($label);
+        } else {
+            $html .= $label;
+        }
+        
+        if($page->hasPages()) {
+            $html .= '<b class="caret"></b>';
+        }
+
+        $html .= '</' . $element . '>';
+
+        return $html;
+    }
+
+    /**
+     * Renders a normal menu (called from {@link renderMenu()})
+     *
+     * @param  AbstractContainer $container container to render
+     * @param  string $ulClass CSS class for first UL
+     * @param  string $indent initial indentation
+     * @param  int|null $minDepth minimum depth
+     * @param  int|null $maxDepth maximum depth
+     * @param  bool $onlyActive render only active branch?
+     * @param  bool $escapeLabels Whether or not to escape the labels
+     * @param bool $addClassToListItem
+     * @param string $liActiveClass
+     * @return string
+     */
+    protected function renderNormalMenu(AbstractContainer $container,
+                                        $ulClass,
+                                        $indent,
+                                        $minDepth,
+                                        $maxDepth,
+                                        $onlyActive,
+                                        $escapeLabels,
+                                        $addClassToListItem,
+                                        $liActiveClass
+    ) {
+        $html = '';
+
+        // find deepest active
+        $found = $this->findActive($container, $minDepth, $maxDepth);
+        if ($found) {
+            $foundPage  = $found['page'];
+            $foundDepth = $found['depth'];
+        } else {
+            $foundPage = null;
+        }
+
+        // create iterator
+        $iterator = new RecursiveIteratorIterator($container,
+                            RecursiveIteratorIterator::SELF_FIRST);
+        if (is_int($maxDepth)) {
+            $iterator->setMaxDepth($maxDepth);
+        }
+
+        // iterate container
+        $prevDepth = -1;
+        foreach ($iterator as $page) {
+            /* @var $page \Zend\Navigation\Page\Mvc */
+            $depth = $iterator->getDepth();
+            $isActive = $page->isActive(true);
+            if ($depth < $minDepth || !$this->accept($page)) {
+                // page is below minDepth or not accepted by acl/visibility
+                continue;
+            } elseif ($onlyActive && !$isActive) {
+                // page is not active itself, but might be in the active branch
+                $accept = false;
+                if ($foundPage) {
+                    if ($foundPage->hasPage($page)) {
+                        // accept if page is a direct child of the active page
+                        $accept = true;
+                    } elseif ($foundPage->getParent()->hasPage($page)) {
+                        // page is a sibling of the active page...
+                        if (!$foundPage->hasPages() ||
+                            is_int($maxDepth) && $foundDepth + 1 > $maxDepth) {
+                            // accept if active page has no children, or the
+                            // children are too deep to be rendered
+                            $accept = true;
+                        }
+                    }
+                }
+
+                if (!$accept) {
+                    continue;
+                }
+            }
+
+            // make sure indentation is correct
+            $depth -= $minDepth;
+            $myIndent = $indent . str_repeat('        ', $depth);
+            $liClasses = array();
+            if ($depth > $prevDepth) {
+                // start new ul tag
+                if ($ulClass && $depth ==  0) {
+                    $ulClass = ' class="' . $ulClass . '"';
+                } else {
+                    $ulClass = ' class="' . $this->getNestedUlClass() . '"';
+                }
+                $html .= $myIndent . '<ul' . $ulClass . '>' . PHP_EOL;
+            } elseif ($prevDepth > $depth) {
+                // close li/ul tags until we're at current depth
+                for ($i = $prevDepth; $i > $depth; $i--) {
+                    $ind = $indent . str_repeat('        ', $i);
+                    $html .= $ind . '    </li>' . PHP_EOL;
+                    $html .= $ind . '</ul>' . PHP_EOL;
+                }
+                // close previous li tag
+                $html .= $myIndent . '    </li>' . PHP_EOL;
+            } else {
+                // close previous li tag
+                $html .= $myIndent . '    </li>' . PHP_EOL;
+            }
+
+            // render li tag and page
+            if($isActive) {
+                $liClasses[] = 'active';
+            }
+            $parentLiClass = $this->getParentLiClass();
+            if(!empty($parentLiClass) && $page->hasPages()) {
+                $liClasses[] = $parentLiClass;
+            }
+            
+            if(count($liClasses) > 0) {
+                $liClass = ' class="'. implode(' ', $liClasses).'"';
+            } else {
+                $liClass = '';
+            }
+            $html .= $myIndent . '    <li' . $liClass . '>' . PHP_EOL
+                   . $myIndent . '        ' . $this->htmlify($page, $escapeLabels) . PHP_EOL;
+
+            // store as previous depth for next iteration
+            $prevDepth = $depth;
+        }
+
+        if ($html) {
+            // done iterating container; close open ul/li tags
+            for ($i = $prevDepth+1; $i > 0; $i--) {
+                $myIndent = $indent . str_repeat('        ', $i-1);
+                $html .= $myIndent . '    </li>' . PHP_EOL
+                       . $myIndent . '</ul>' . PHP_EOL;
+            }
+            $html = rtrim($html, PHP_EOL);
+        }
+
+        return $html;
+    }
+
+    
+}
\ No newline at end of file
diff --git a/module/Application/view/layout/layout.phtml b/module/Application/view/layout/layout.phtml
index 9e1a4c2..0f2e842 100755
--- a/module/Application/view/layout/layout.phtml
+++ b/module/Application/view/layout/layout.phtml
@@ -27,65 +27,25 @@
     </head>
     <body>
         <nav class="navbar navbar-default navbar-fixed-top" role="navigation">
-            <div class="container">                
+            <div class="container">
+                <div class="navbar-header">
+                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
+                        <span class="icon-bar"></span>
+                        <span class="icon-bar"></span>
+                        <span class="icon-bar"></span>
+                    </button>
+                    <a class="navbar-brand" href="<?php echo $this->url('home') ?>"><img src="<?php echo $this->basePath('img/zf2-logo.png') ?>" alt="Zend Framework 2"/>&nbsp;<?php echo $this->translate('Skeleton Application') ?></a>
+                </div>
                 <div class="collapse navbar-collapse">
-                    <ul class="nav navbar-nav">
-                        
-                        <li class=" active dropdown">
-                            <a href="<?php echo $this->url('home') ?>" class="dropdown-toggle" data-toggle="dropdown">
-                                <span class="glyphicon glyphicon-user"></span>
-                                <?php echo $this->translate(' Reservas') ?>
-                                <span class="caret"></span></a>
-                                <ul class="dropdown-menu" role="menu">
-                                    <li><a href="<?php echo $this->url('home') ?>reserva/index">Consultar Reserva</a></li>
-                                    <li><a href="<?php echo $this->url('home') ?>reserva/indexhabitacion">Habitaciones</a></li>
-                                    <li><a href="<?php echo $this->url('home') ?>reserva/indexpabellon">Pabellones</a></li>
-                                    <li><a href="<?php echo $this->url('home') ?>reserva/indextarifa">Tarifas</a></li>                           
-                                </ul>
-                            </a>
-                        </li>
-                        <li class="dropdown">
-                            <a href="<?php echo $this->url('home') ?>" class="dropdown-toggle" data-toggle="dropdown">
-                                <span class="glyphicon glyphicon-user"></span>
-                                <?php echo $this->translate(' Clientes') ?>
-                                <span class="caret"></span></a>
-                                <ul class="dropdown-menu" role="menu">
-                                    <li><a href="<?php echo $this->url('home') ?>cliente/index">Consulta</a></li>
-                                    <li><a href="<?php echo $this->url('home') ?>cliente/add">Alta</a></li>
-                                    
-                                </ul>
-                            </a>
-                        </li>
-                        <li class="dropdown">
-                            <a href="<?php echo $this->url('home') ?>" class="dropdown-toggle" data-toggle="dropdown">
-                                <span class="glyphicon glyphicon-barcode"></span>
-                                <?php echo $this->translate(' Proveedores') ?>
-                                <span class="caret"></span></a>
-                                <ul class="dropdown-menu" role="menu">
-                                    <li><a href="<?php echo $this->url('home') ?>proveedor/index">Consulta</a></li>
-                                    <li><a href="<?php echo $this->url('home') ?>proveedor/add">Alta</a></li>
-                                </ul>
-                            </a>
-                        </li>
-                        <li>
-                            <a href="<?php echo $this->url('home') ?>">
-                                <span class="glyphicon glyphicon-glass"></span>
-                                <?php echo $this->translate(' Bar') ?>
-                            </a>
-                        </li>
-                        <li>
-                            <a href="<?php echo $this->url('home') ?>">
-                                <span class="glyphicon glyphicon-shopping-cart"></span
-                                ><?php echo $this->translate(' Deposito y Stock') ?>
-                            </a>
-                        </li>
-                        <li>
-                            <a href="<?php echo $this->url('home') ?>">
-                                <span class="glyphicon glyphicon-list-alt"></span>
-                                <?php echo $this->translate(' Auditoría') ?>
-                            </a>
-                        </li>
-                    </ul>
+                    <?php echo $this->bootstrapNavigation('Navigation'); ?>
+                    <div class="navbar-right">Welcome! <?php
+$user = $this->zfcUserIdentity();
+if($user) {
+    echo $user->getDisplayName() . ', you are an ';
+} else {
+    echo 'Guest';
+}?>
+                    </div>
                 </div><!--/.nav-collapse -->
             </div>
         </nav>
diff --git a/module/BjyAuthorizeAdmin/Module.php b/module/BjyAuthorizeAdmin/Module.php
new file mode 100644
index 0000000..f5f9bdb
--- /dev/null
+++ b/module/BjyAuthorizeAdmin/Module.php
@@ -0,0 +1,21 @@
+<?php
+namespace BjyAuthorizeAdmin;
+
+class Module
+{
+    public function getConfig()
+    {
+        return include __DIR__ . '/config/module.config.php';
+    }
+
+    public function getAutoloaderConfig()
+    {
+        return array(
+            'Zend\Loader\StandardAutoloader' => array(
+                'namespaces' => array(
+                    __NAMESPACE__ => __DIR__ . '/src/' . __NAMESPACE__,
+                ),
+            ),
+        );
+    }
+}
diff --git a/module/BjyAuthorizeAdmin/config/module.config.php b/module/BjyAuthorizeAdmin/config/module.config.php
new file mode 100644
index 0000000..6879316
--- /dev/null
+++ b/module/BjyAuthorizeAdmin/config/module.config.php
@@ -0,0 +1,157 @@
+<?php
+return array(
+    'controllers' => array(
+        'invokables' => array(
+            'byjautorizeadmin-roles' => 'BjyAuthorizeAdmin\Controller\RolesController',
+            'byjautorizeadmin-userroles' => 'BjyAuthorizeAdmin\Controller\UserRolesController',
+        ),
+    ),
+    'navigation' => array(
+        'admin' => array(
+            'byjautorizeadmin-roles' => array(
+                'label' => 'Roles',
+                'route' => 'zfcadmin/roles/list',
+                'pages' => array(
+                    'create' => array(
+                        'label' => 'New Role',
+                        'route' => 'zfcadmin/roles/list'
+                    )
+                )
+            ),
+            'byjautorizeadmin-user-roles' => array(
+                'label' => 'User Roles',
+                'route' => 'zfcadmin/userRoles/list',
+                'pages' => array(
+                    'assign' => array(
+                        'label' => 'Assign Role',
+                        'route' => 'zfcadmin/userRoles/assign'
+                    )
+                )
+            )
+        ),
+    ),
+    'view_manager' => array(
+        'template_path_stack' => array(
+            'byjautorizeadmin' => __DIR__ . '/../view',
+        ),
+    ),
+    'router' => array(
+        'routes' => array(
+            'zfcadmin' => array(
+                'child_routes' => array(
+                    'roles' => array(
+                        'type' => 'literal',
+                        'options' => array(
+                            'route' => '/roles',
+                            'defaults' => array(
+                                'controller' => 'byjautorizeadmin-roles',
+                                'action'     => 'index',
+                            ),
+                        ),
+                        'may_terminate' => true,
+                        'child_routes' => array(
+                            'list' => array(
+                                'type' => 'Segment',
+                                'options' => array(
+                                    'route' => '/list[/:p]',
+                                    'defaults' => array(
+                                        'controller' => 'byjautorizeadmin-roles',
+                                        'action'     => 'list',
+                                    ),
+                                ),
+                            ),
+                            'create' => array(
+                                'type' => 'Literal',
+                                'options' => array(
+                                    'route' => '/create',
+                                    'defaults' => array(
+                                        'controller' => 'byjautorizeadmin-roles',
+                                        'action'     => 'create'
+                                    ),
+                                ),
+                            ),
+                            'edit' => array(
+                                'type' => 'Segment',
+                                'options' => array(
+                                    'route' => '/edit/:userId',
+                                    'defaults' => array(
+                                        'controller' => 'byjautorizeadmin-roles',
+                                        'action'     => 'edit',
+                                        'userId'     => 0
+                                    ),
+                                ),
+                            ),
+                            'remove' => array(
+                                'type' => 'Segment',
+                                'options' => array(
+                                    'route' => '/remove/:userId',
+                                    'defaults' => array(
+                                        'controller' => 'byjautorizeadmin-roles',
+                                        'action'     => 'remove',
+                                        'userId'     => 0
+                                    ),
+                                ),
+                            ),
+                        ),
+                    ),
+                    'userRoles' => array(
+                        'type' => 'literal',
+                        'options' => array(
+                            'route' => '/userRoles',
+                            'defaults' => array(
+                                'controller' => 'byjautorizeadmin-userroles',
+                                'action'     => 'index',
+                            ),
+                        ),
+                        'may_terminate' => true,
+                        'child_routes' => array(
+                            'list' => array(
+                                'type' => 'Segment',
+                                'options' => array(
+                                    'route' => '/list[/:p]',
+                                    'defaults' => array(
+                                        'controller' => 'byjautorizeadmin-roles',
+                                        'action'     => 'list',
+                                    ),
+                                ),
+                            ),
+                            'assign' => array(
+                                'type' => 'Segment',
+                                'options' => array(
+                                    'route' => '/assign[/:userId]',
+                                    'defaults' => array(
+                                        'controller' => 'byjautorizeadmin-roles',
+                                        'action'     => 'assign',
+                                        'userId'     => 0
+                                    ),
+                                ),
+                            ),
+                            'edit' => array(
+                                'type' => 'Segment',
+                                'options' => array(
+                                    'route' => '/edit[/:userId]',
+                                    'defaults' => array(
+                                        'controller' => 'byjautorizeadmin-roles',
+                                        'action'     => 'assign',
+                                        'userId'     => 0
+                                    ),
+                                ),
+                            ),
+                            'remove' => array(
+                                'type' => 'Segment',
+                                'options' => array(
+                                    'route' => '/remove[/:userId]',
+                                    'defaults' => array(
+                                        'controller' => 'byjautorizeadmin-roles',
+                                        'action'     => 'assign',
+                                        'userId'     => 0
+                                    ),
+                                ),
+                            ),
+                        )
+                    ),
+                ),
+            ),
+        ),
+    ),
+);
\ No newline at end of file
diff --git a/module/BjyAuthorizeAdmin/src/BjyAuthorizeAdmin/Controller/RolesController.php b/module/BjyAuthorizeAdmin/src/BjyAuthorizeAdmin/Controller/RolesController.php
new file mode 100644
index 0000000..56c5afe
--- /dev/null
+++ b/module/BjyAuthorizeAdmin/src/BjyAuthorizeAdmin/Controller/RolesController.php
@@ -0,0 +1,33 @@
+<?php
+
+namespace BjyAuthorizeAdmin\Controller;
+
+use Zend\Mvc\Controller\AbstractActionController;
+use Zend\View\Model\ViewModel;
+
+class RolesController extends AbstractActionController
+{
+
+    public function indexAction()
+    {
+        return new ViewModel();
+    }
+
+    public function listAction()
+    {
+        return new ViewModel();
+    }
+
+    public function createAction()
+    {
+        return new ViewModel();
+    }
+
+    public function removeAction()
+    {
+        return new ViewModel();
+    }
+
+
+}
+
diff --git a/module/BjyAuthorizeAdmin/src/BjyAuthorizeAdmin/Controller/UserRolesController.php b/module/BjyAuthorizeAdmin/src/BjyAuthorizeAdmin/Controller/UserRolesController.php
new file mode 100644
index 0000000..055242a
--- /dev/null
+++ b/module/BjyAuthorizeAdmin/src/BjyAuthorizeAdmin/Controller/UserRolesController.php
@@ -0,0 +1,38 @@
+<?php
+
+namespace BjyAuthorizeAdmin\Controller;
+
+use Zend\Mvc\Controller\AbstractActionController;
+use Zend\View\Model\ViewModel;
+
+class UserRolesController extends AbstractActionController
+{
+
+    public function indexAction()
+    {
+        return new ViewModel();
+    }
+
+    public function listAction()
+    {
+        return new ViewModel();
+    }
+
+    public function assignAction()
+    {
+        return new ViewModel();
+    }
+
+    public function removeAction()
+    {
+        return new ViewModel();
+    }
+
+    public function editAction()
+    {
+        return new ViewModel();
+    }
+
+
+}
+
diff --git a/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/roles/create.phtml b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/roles/create.phtml
new file mode 100644
index 0000000..dff4fe9
--- /dev/null
+++ b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/roles/create.phtml
@@ -0,0 +1,3 @@
+Module: BjyAuthorizeAdmin
+Controller: Roles
+Action: create
\ No newline at end of file
diff --git a/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/roles/index.phtml b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/roles/index.phtml
new file mode 100644
index 0000000..6caf158
--- /dev/null
+++ b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/roles/index.phtml
@@ -0,0 +1 @@
+Action "index", controller "Roles", module "BjyAuthorizeAdmin".
\ No newline at end of file
diff --git a/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/roles/list.phtml b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/roles/list.phtml
new file mode 100644
index 0000000..2f5c00c
--- /dev/null
+++ b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/roles/list.phtml
@@ -0,0 +1,3 @@
+Module: BjyAuthorizeAdmin
+Controller: Roles
+Action: list
\ No newline at end of file
diff --git a/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/roles/remove.phtml b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/roles/remove.phtml
new file mode 100644
index 0000000..5ed9640
--- /dev/null
+++ b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/roles/remove.phtml
@@ -0,0 +1,3 @@
+Module: BjyAuthorizeAdmin
+Controller: Roles
+Action: remove
\ No newline at end of file
diff --git a/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/user-roles/assign.phtml b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/user-roles/assign.phtml
new file mode 100644
index 0000000..1d37ecc
--- /dev/null
+++ b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/user-roles/assign.phtml
@@ -0,0 +1,3 @@
+Module: BjyAuthorizeAdmin
+Controller: UserRoles
+Action: assign
\ No newline at end of file
diff --git a/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/user-roles/edit.phtml b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/user-roles/edit.phtml
new file mode 100644
index 0000000..dc5dd7d
--- /dev/null
+++ b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/user-roles/edit.phtml
@@ -0,0 +1,3 @@
+Module: BjyAuthorizeAdmin
+Controller: UserRoles
+Action: edit
\ No newline at end of file
diff --git a/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/user-roles/index.phtml b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/user-roles/index.phtml
new file mode 100644
index 0000000..09a223a
--- /dev/null
+++ b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/user-roles/index.phtml
@@ -0,0 +1 @@
+Action "index", controller "UserRoles", module "BjyAuthorizeAdmin".
\ No newline at end of file
diff --git a/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/user-roles/list.phtml b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/user-roles/list.phtml
new file mode 100644
index 0000000..1ae3b34
--- /dev/null
+++ b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/user-roles/list.phtml
@@ -0,0 +1,3 @@
+Module: BjyAuthorizeAdmin
+Controller: UserRoles
+Action: list
\ No newline at end of file
diff --git a/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/user-roles/remove.phtml b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/user-roles/remove.phtml
new file mode 100644
index 0000000..4513f85
--- /dev/null
+++ b/module/BjyAuthorizeAdmin/view/bjy-authorize-admin/user-roles/remove.phtml
@@ -0,0 +1,3 @@
+Module: BjyAuthorizeAdmin
+Controller: UserRoles
+Action: remove
\ No newline at end of file
diff --git a/module/Cliente/config/module.config.php b/module/Cliente/config/module.config.php
index 0ed583a..a20296f 100755
--- a/module/Cliente/config/module.config.php
+++ b/module/Cliente/config/module.config.php
@@ -1,5 +1,6 @@
 <?php
-return array(
+
+$setting = array(
      'controllers' => array(
          'invokables' => array(
              'Cliente\Controller\Cliente' => 'Cliente\Controller\ClienteController',
@@ -32,3 +33,7 @@ return array(
          ),
      ),
  );
+
+$navigation = include 'navigation.config.php';
+
+return array_merge($setting, $navigation);
\ No newline at end of file
diff --git a/module/Cliente/config/navigation.config.php b/module/Cliente/config/navigation.config.php
new file mode 100644
index 0000000..02b99f9
--- /dev/null
+++ b/module/Cliente/config/navigation.config.php
@@ -0,0 +1,37 @@
+<?php
+
+return array(
+    // All navigation-related configuration is collected in the 'navigation' key
+    'navigation' => array(
+        // The DefaultNavigationFactory we configured in (1) uses 'default' as the sitemap key
+        'default' => array(
+            // And finally, here is where we define our page hierarchy
+            array(
+                'label' => 'Clientes',
+                'route' => 'cliente',
+                'controller' => 'Proveedor\Controller\Proveedor',
+                'action' => 'index',
+                'resource' => 'cliente',
+                'module'     => 'cliente',
+                'pages' => array(
+                    'list' => array(
+                        'label' => 'Consulta',
+                        'route' => 'cliente',
+                        'controller' => 'Cliente\Controller\Cliente',
+                        'action' => 'index',
+                        'resource' => 'cliente',
+                        'privilege' => 'view',
+                    ),
+                    'add' => array(
+                        'label' => 'Alta',
+                        'route' => 'cliente',
+                        'controller' => 'Cliente\Controller\Cliente',
+                        'action' => 'add',
+                        'resource' => 'cliente',
+                        'privilege' => 'add',
+                    ),
+                ),
+            ),
+        ),
+    ),
+);
\ No newline at end of file
diff --git a/module/Proveedor/config/module.config.php b/module/Proveedor/config/module.config.php
index 4426f07..7ac72db 100755
--- a/module/Proveedor/config/module.config.php
+++ b/module/Proveedor/config/module.config.php
@@ -1,5 +1,6 @@
 <?php
-return array(
+
+$setting = array(
      'controllers' => array(
          'invokables' => array(
              'Proveedor\Controller\Proveedor' => 'Proveedor\Controller\ProveedorController',
@@ -32,3 +33,7 @@ return array(
          ),
      ),
  );
+
+$navigation = include 'navigation.config.php';
+
+return array_merge($setting, $navigation);
\ No newline at end of file
diff --git a/module/Proveedor/config/navigation.config.php b/module/Proveedor/config/navigation.config.php
new file mode 100644
index 0000000..b6f7960
--- /dev/null
+++ b/module/Proveedor/config/navigation.config.php
@@ -0,0 +1,37 @@
+<?php
+
+return array(
+    // All navigation-related configuration is collected in the 'navigation' key
+    'navigation' => array(
+        // The DefaultNavigationFactory we configured in (1) uses 'default' as the sitemap key
+        'default' => array(
+            // And finally, here is where we define our page hierarchy
+            array(
+                'label' => 'Proveedores',
+                'route' => 'proveedor',
+                'controller' => 'Proveedor\Controller\Proveedor',
+                'action' => 'index',
+                'resource' => 'proveedor',
+                'module'     => 'proveedor',
+                'pages' => array(
+                    'proveedorlist' => array(
+                        'label' => 'Consulta',
+                        'route' => 'proveedor',
+                        'controller' => 'Proveedor\Controller\Proveedor',
+                        'action' => 'index',
+                        'resource' => 'proveedor',
+                        'privilege' => 'view',
+                    ),
+                    'proveedoradd' => array(
+                        'label' => 'Alta',
+                        'route' => 'proveedor',
+                        'controller' => 'Proveedor\Controller\Proveedor',
+                        'action' => 'add',
+                        'resource' => 'proveedor',
+                        'privilege' => 'add',
+                    ),
+                ),
+            ),
+        ),
+    ),
+);
\ No newline at end of file
diff --git a/module/Reserva/config/module.config antes solucion.php b/module/Reserva/config/module.config antes solucion.php
deleted file mode 100755
index 71a72bc..0000000
--- a/module/Reserva/config/module.config antes solucion.php	
+++ /dev/null
@@ -1,32 +0,0 @@
-<?php
-return array(
-     'controllers' => array(
-         'invokables' => array(
-             'Reserva\Controller\Reserva' => 'Reserva\Controller\ReservaController',
-         ),
-     ),
-     'router' => array(
-         'routes' => array(
-             'reserva' => array(
-                 'type'    => 'segment',
-                 'options' => array(
-                     'route'    => '/reserva[/][:action][/:id]',
-                     //'route'    => '/reserva[/][:action][/:fechaDesde][/:fechaHasta]',
-                      'constraints' => array(
-                         'action' => '[a-zA-Z][a-zA-Z0-9_-]*',
-                         'id'     => '[0-9]+',
-                     ),
-                     'defaults' => array(
-                         'controller' => 'Reserva\Controller\Reserva',
-                         'action'     => 'index',
-                     ),
-                 ),
-             ),
-         ),
-     ),
-     'view_manager' => array(
-         'template_path_stack' => array(
-             'reserva' => __DIR__ . '/../view',
-         ),
-     ),
- );
diff --git a/module/Reserva/config/module.config.php b/module/Reserva/config/module.config.php
index 9c774be..9183d24 100755
--- a/module/Reserva/config/module.config.php
+++ b/module/Reserva/config/module.config.php
@@ -1,5 +1,6 @@
 <?php
-return array(
+
+$setting = array(
      'controllers' => array(
          'invokables' => array(
              'Reserva\Controller\Reserva' => 'Reserva\Controller\ReservaController',
@@ -10,10 +11,10 @@ return array(
              'gridreserva' => array(
                  'type'    => 'segment',
                  'options' => array(
-                     'route'    => '/reserva[/][:action][/:fechaDesde][/:fechaHasta]',
+                     'route'    => '/reserva/gridreserva[/:fechaDesde][/:fechaHasta]',
                      'defaults' => array(
                          'controller' => 'Reserva\Controller\Reserva',
-                         'action'     => 'index',
+                         'action'     => 'gridreserva',
                      ),
                  ),
              ),
@@ -38,4 +39,8 @@ return array(
              'reserva' => __DIR__ . '/../view',
          ),
      ),
- );
\ No newline at end of file
+ );
+
+$navigation = include 'navigation.config.php';
+
+return array_merge($setting, $navigation);
\ No newline at end of file
diff --git a/module/Reserva/config/module.config1.php b/module/Reserva/config/module.config1.php
deleted file mode 100755
index bb43477..0000000
--- a/module/Reserva/config/module.config1.php
+++ /dev/null
@@ -1,60 +0,0 @@
-<?php
-return array(
-     'controllers' => array(
-         'invokables' => array(
-             'Reserva\Controller\Reserva' => 'Reserva\Controller\ReservaController',
-         ),
-     ),
-
-     // The following section is new and should be added to your file
-     'router' => array(
-        'routes' => array(
-            'reserva' => array(
-                'type'    => 'Literal',
-                'options' => array(
-                    'route'    => '/reserva',
-                        'defaults' => array(
-                         'controller' => 'Reserva\Controller\Reserva',
-                         'action'     => 'index',
-                     ),
-                ),
-                'may_terminate' => true,
-                'child_routes' => array(
-                    'book' => array(
-                        'type' => 'segment',
-                        'options' => array(
-                            'route' => '/book/[/:id]',
-                            'defaults' => array(
-                                'controller' => 'reserva',
-                                'action' => 'index'
-                            )
-                        )
-                    ),
-                    'pipeline-period' => array(
-                        'type' => 'segment',
-                        'options' => array(
-                            'route' => '/pipeline/[:period]/[:type]',
-                            'constraints' => array(
-                                'period' => '(this|previous|last|next|current)',
-                                'type' => '(week|month|quarter|year)'
-                            ),
-                            'defaults' => array(
-                                'controller' => 'pipeline',
-                                'action' => 'view'
-                            )
-                        )
-                    ),
-                ),
-            ),
-        ),
-),
-
-
-
-
-     'view_manager' => array(
-         'template_path_stack' => array(
-             'reserva' => __DIR__ . '/../view',
-         ),
-     ),
- );
diff --git a/module/Reserva/config/navigation.config.php b/module/Reserva/config/navigation.config.php
new file mode 100644
index 0000000..57d797b
--- /dev/null
+++ b/module/Reserva/config/navigation.config.php
@@ -0,0 +1,53 @@
+<?php
+
+return array(
+    // All navigation-related configuration is collected in the 'navigation' key
+    'navigation' => array(
+        // The DefaultNavigationFactory we configured in (1) uses 'default' as the sitemap key
+        'default' => array(
+            // And finally, here is where we define our page hierarchy
+            array(
+                'label' => 'Reservas',
+                'route' => 'reserva',
+                'controller' => 'Reserva\Controller\Reserva',
+                'action' => 'index',
+                'resource' => 'reserva',
+                'module'     => 'reserva',
+                'pages' => array(
+                    'index' => array(
+                        'label' => 'Consultar Reserva',
+                        'route' => 'reserva',
+                        'controller' => 'Reserva\Controller\Reserva',
+                        'action' => 'index',
+                        'resource' => 'reserva',
+                        'privilege' => 'view',
+                    ),
+                    'indexhabitacion' => array(
+                        'label' => 'Habitaciones',
+                        'route' => 'reserva',
+                        'controller' => 'Reserva\Controller\Reserva',
+                        'action' => 'indexhabitacion',
+                        'resource' => 'habitacion',
+                        'privilege' => 'view',
+                    ),
+                    'indextarifa' => array(
+                        'label' => 'Tarifas',
+                        'route' => 'reserva',
+                        'controller' => 'Reserva\Controller\Reserva',
+                        'action' => 'indextarifa',
+                        'resource' => 'tarifa',
+                        'privilege' => 'view',
+                    ),
+                    'indexpabellon' => array(
+                        'label' => 'Pabellones',
+                        'route' => 'reserva',
+                        'controller' => 'Reserva\Controller\Reserva',
+                        'action' => 'indexpabellon',
+                        'resource' => 'pabellon',
+                        'privilege' => 'view',
+                    ),
+                ),
+            ),
+        ),
+    ),
+);
\ No newline at end of file
diff --git a/module/Reserva/view/reserva/reserva/index.phtml b/module/Reserva/view/reserva/reserva/index.phtml
index 7fb6421..2c91491 100755
--- a/module/Reserva/view/reserva/reserva/index.phtml
+++ b/module/Reserva/view/reserva/reserva/index.phtml
@@ -41,8 +41,7 @@ 
             $records = array();
             </select>
         </div>        
         <div class="col-sm-2">    <br><?php $hola=12 ?>
-            <a type="button" class="btn btn-primary" href="<?php echo $this->url('reserva', array('controller'=> 'reserva', 'action' => 
-                    'gridreserva', 'fechaDesde' => 3, 'fechaHasta' =>3,)) ?>">Buscar </a>
+            <a type="button" class="btn btn-primary" href="<?php echo $this->url('gridreserva', array('fechaDesde' => 3, 'fechaHasta' =>3,)) ?>">Buscar </a>
         </div>    